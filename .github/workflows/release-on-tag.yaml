name: Build with Nuitka

on:
  push:
    tags:
      - "v*"   # only run when a tag starting with 'v' is created (e.g. v1.0.0)

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      # Checkout source
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Custom pre-build commands (adjust as needed)
      - name: Run pre-build commands
        run: |
          echo "Running pre-build setup..."
          # Example: generate resources, copy configs, etc.
          pyside6-rcc --binary assets.qrc -o assets.rc

      # Nuitka build
      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          mode: standalone
          windows-icon-from-ico: "assets/icon.ico"
          enable-plugins: pyside6
          include-data-files: |
            assets.rcc=assets.rcc

      # Archive the build output
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
            build/*.dist/**/*
          include-hidden-files: true

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
